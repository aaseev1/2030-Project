controllers/homeController.js handles server HTTP POSTing (posting data to mongodb) for users
controllers/memberController.js handles authentication for users and roles, and also handles server HTTP GET (getting data from mongodb) and HTTP POSTing for posts
models/config/config.js contains mongodb authentication details 
models/post.js contains the template for each post 
models/user.js contains the template for each user 
models/util.js can connect to MongoDB locally or globally, has utility functions that find, delete and insert one or many documents to and from MongoDB 
server/config/config.js probably relates to the views (client) folder in some way due to its ROOT folder being the views folder, but I'm not sure how it documents
server/server.js sets up the mongoclient express server
views/js/home.js contains code that adds button to the register and login buttons to display a register or login form depending on which button is clicked
views/js/member.js is probably intended to have code to retrieve/post/delete members but it only has geolocation and weather code 
views/js/partials.js fills the html file with the head, navbar, and footer. I think it's only used in 404.html as it links that js file. 
views/js/posts.js displays the posts on the site, and adds a button to each post allowing users to view the details of each post 
views/404.html is linked to partials.js
views/about.html, views/details.html, views/index.html are linked to home.js
views/member.html is linked to member.js
views/postMessage.html is only linked to the bootstrap bundle js which every other file is also linked to 
views/posts.html is linked to posts.js







